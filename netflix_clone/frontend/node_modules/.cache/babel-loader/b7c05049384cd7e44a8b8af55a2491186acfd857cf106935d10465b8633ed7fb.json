{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests if available\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Handle token expiration\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API calls\nexport const authAPI = {\n  register: userData => api.post('/auth/register', userData),\n  login: credentials => api.post('/auth/login', credentials),\n  getProfile: () => api.get('/auth/profile')\n};\n\n// Movies API calls\nexport const moviesAPI = {\n  getMovies: (params = {}) => api.get('/movies', {\n    params\n  }),\n  getMovie: id => api.get(`/movies/${id}`),\n  searchMovies: (query, limit = 20) => api.get('/movies/search', {\n    params: {\n      q: query,\n      limit\n    }\n  }),\n  getMoviesByGenre: (genre, limit = 20) => api.get(`/movies/genre/${genre}`, {\n    params: {\n      limit\n    }\n  }),\n  getTrendingMovies: (limit = 10) => api.get('/movies/trending', {\n    params: {\n      limit\n    }\n  }),\n  watchMovie: id => api.post(`/movies/${id}/watch`),\n  addToWatchlist: id => api.post(`/movies/${id}/watchlist`),\n  removeFromWatchlist: id => api.delete(`/movies/${id}/watchlist`)\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","authAPI","register","userData","post","login","credentials","getProfile","get","moviesAPI","getMovies","params","getMovie","id","searchMovies","query","limit","q","getMoviesByGenre","genre","getTrendingMovies","watchMovie","addToWatchlist","removeFromWatchlist","delete"],"sources":["C:/Codebase/PythonProjects/netflix_clone/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add token to requests if available\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Handle token expiration\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth API calls\nexport const authAPI = {\n  register: (userData) => api.post('/auth/register', userData),\n  login: (credentials) => api.post('/auth/login', credentials),\n  getProfile: () => api.get('/auth/profile'),\n};\n\n// Movies API calls\nexport const moviesAPI = {\n  getMovies: (params = {}) => api.get('/movies', { params }),\n  getMovie: (id) => api.get(`/movies/${id}`),\n  searchMovies: (query, limit = 20) => api.get('/movies/search', { params: { q: query, limit } }),\n  getMoviesByGenre: (genre, limit = 20) => api.get(`/movies/genre/${genre}`, { params: { limit } }),\n  getTrendingMovies: (limit = 10) => api.get('/movies/trending', { params: { limit } }),\n  watchMovie: (id) => api.post(`/movies/${id}/watch`),\n  addToWatchlist: (id) => api.post(`/movies/${id}/watchlist`),\n  removeFromWatchlist: (id) => api.delete(`/movies/${id}/watchlist`),\n};\n\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;;AAEjF;AACA,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACAP,GAAG,CAACI,YAAY,CAACQ,QAAQ,CAACN,GAAG,CAC1BM,QAAQ,IAAKA,QAAQ,EACrBC,KAAK,IAAK;EAAA,IAAAC,eAAA;EACT,IAAI,EAAAA,eAAA,GAAAD,KAAK,CAACD,QAAQ,cAAAE,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClCN,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;IAChCP,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;IAC/BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EACA,OAAOC,OAAO,CAACC,MAAM,CAACR,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMS,OAAO,GAAG;EACrBC,QAAQ,EAAGC,QAAQ,IAAKxB,GAAG,CAACyB,IAAI,CAAC,gBAAgB,EAAED,QAAQ,CAAC;EAC5DE,KAAK,EAAGC,WAAW,IAAK3B,GAAG,CAACyB,IAAI,CAAC,aAAa,EAAEE,WAAW,CAAC;EAC5DC,UAAU,EAAEA,CAAA,KAAM5B,GAAG,CAAC6B,GAAG,CAAC,eAAe;AAC3C,CAAC;;AAED;AACA,OAAO,MAAMC,SAAS,GAAG;EACvBC,SAAS,EAAEA,CAACC,MAAM,GAAG,CAAC,CAAC,KAAKhC,GAAG,CAAC6B,GAAG,CAAC,SAAS,EAAE;IAAEG;EAAO,CAAC,CAAC;EAC1DC,QAAQ,EAAGC,EAAE,IAAKlC,GAAG,CAAC6B,GAAG,CAAC,WAAWK,EAAE,EAAE,CAAC;EAC1CC,YAAY,EAAEA,CAACC,KAAK,EAAEC,KAAK,GAAG,EAAE,KAAKrC,GAAG,CAAC6B,GAAG,CAAC,gBAAgB,EAAE;IAAEG,MAAM,EAAE;MAAEM,CAAC,EAAEF,KAAK;MAAEC;IAAM;EAAE,CAAC,CAAC;EAC/FE,gBAAgB,EAAEA,CAACC,KAAK,EAAEH,KAAK,GAAG,EAAE,KAAKrC,GAAG,CAAC6B,GAAG,CAAC,iBAAiBW,KAAK,EAAE,EAAE;IAAER,MAAM,EAAE;MAAEK;IAAM;EAAE,CAAC,CAAC;EACjGI,iBAAiB,EAAEA,CAACJ,KAAK,GAAG,EAAE,KAAKrC,GAAG,CAAC6B,GAAG,CAAC,kBAAkB,EAAE;IAAEG,MAAM,EAAE;MAAEK;IAAM;EAAE,CAAC,CAAC;EACrFK,UAAU,EAAGR,EAAE,IAAKlC,GAAG,CAACyB,IAAI,CAAC,WAAWS,EAAE,QAAQ,CAAC;EACnDS,cAAc,EAAGT,EAAE,IAAKlC,GAAG,CAACyB,IAAI,CAAC,WAAWS,EAAE,YAAY,CAAC;EAC3DU,mBAAmB,EAAGV,EAAE,IAAKlC,GAAG,CAAC6C,MAAM,CAAC,WAAWX,EAAE,YAAY;AACnE,CAAC;AAED,eAAelC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}